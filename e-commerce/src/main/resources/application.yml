spring:
  config:
    import: optional:file:.env[.properties]
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 50MB
  application:
    name: e-commerce
  datasource:
    url: jdbc:mysql://localhost:3307/ecommerce
    username: root
    password: 15122004

  jpa:
    properties:
      hibernate:
        format_sql: true


  elasticsearch:
    uris: http://localhost:9200
    username: docker-cluster
    password: 090224T@n
    index-recovery:
      mode: full  # Make sure recovery mode is set to full
  kafka:
    bootstrap-servers: 127.0.0.1:9091,127.0.0.1:9092,127.0.0.1:9093
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: paymentEvent:com.tanle.e_commerce.event.PaymentEvent

      auto-offset-reset: earliest
      group-id: search-async
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping:
          paymentEvent:com.tanle.e_commerce.event.PaymentEvent,orderEvent:com.tanle.e_commerce.event.OrderEvent
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
  mail:
    from: fcletan12@gmail.com

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.web.multipart: TRACE
    org.springframework.data.elasticsearch: DEBUG
    org.springframework.security: DEBUG
    org.apache.http: DEBUG
    root: warn
    org:
      hibernate:
        SQL: debug
      hibernate.orm.jdbc.bind: trace
      springframework.security: DEBUG

lombok:
  anyConstructor:
    addConstructorProperties: true

application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: 86400 # a day
      refresh-token:
        expiration: 604800 # a week
  kafka:
    topics:
      topic1: "dbs_.ecommerce.product"
      topic2: "dbs_.ecommerce.sku"
      topic3: "dbs_.ecommerce.category"
      topic4: "dbs_.ecommerce.options"
      topic5: "dbs_.ecommerce.option_value"
      topicPayment: "dbs_.ecommerce.payemnt-topic"

payment:
  vnPay:
    refundUrl: https://sandbox.vnpayment.vn/merchant_webapi/api/transaction
    url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
    tmnCode: MEBTRFP0
    secretKey: ${VNPAY_SECRET_KEY}
    returnUrl: http://localhost:8080/ecommerce-server/api/v1/vn-pay-callback
    version: 2.1.0
    command: pay
    orderType: Thanh toan don hang
server:
  port: 8080
  tomcat:
    max-http-form-post-size: 100MB
  servlet:
    context-path: /ecommerce-server/

cloudinary:
  cloud-name: dlwjpzshh
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

sendgrid:
  template-confirm-payment-id: d-d48c1e0a0ccf408397ee8a244d959d56
firebase:
  path: ${FIREBASE_PATH}